Bootstrap: docker
From: nvidia/cuda:11.8.0-devel-ubuntu22.04
Stage: build

%files
    learner
    planners
    mdpsim

%post
   # These first few commands allow us to find the python3-pip package later
    # on.
    apt-get update --yes --quiet && DEBIAN_FRONTEND=noninteractive apt-get install --yes --quiet --no-install-recommends \
    software-properties-common \
    build-essential apt-utils \
    wget curl vim git ca-certificates kmod \
    nvidia-driver-525 \
    && rm -rf /var/lib/apt/lists/*

    # python3-tk is required by matplotlib.
    add-apt-repository --yes ppa:deadsnakes/ppa && apt-get update --yes --quiet
    DEBIAN_FRONTEND=noninteractive apt-get install --yes --quiet --no-install-recommends \
    python3.10 \
    python3.10-dev \
    python3.10-distutils \
    python3.10-lib2to3 \
    python3.10-gdbm \
    python3.10-tk \
    pip

    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 999 \
    && update-alternatives --config python3 && ln -s /usr/bin/python3 /usr/bin/python


    # cpp packages
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        cmake \
        build-essential \
        libboost-all-dev

    # Reduce the size of the image by deleting the package lists we downloaded,
    # which are useless now.
    rm -rf /var/lib/apt/lists/*

    # Install Python modules.
    pip install "pybind11[global]"

    pip install matplotlib networkx config numpy pytest scikit_learn scipy
    pip3 install torch --index-url https://download.pytorch.org/whl/cu118
    pip install torch_geometric
    pip install pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.1.0+cu118.html

    cd /planners/downward
    rm -rf builds/release/
    ./build.py release
    cd ..

    cd /planners/FD-Hypernet-master
    rm -rf builds/release/
    ./build.py release
    cd ..

    cd /planners/downward_gpu
    rm -rf builds/release/
    ./build.py release
    cd ..

    pip install -e mdpsim


# Stage 2: Run the planner
Bootstrap: docker
From: nvidia/cuda:11.8.0-devel-ubuntu22.04
Stage: run

%files from build
    .

%runscript
    #! /bin/bash
    set -euo pipefail
    PYTHONPATH=/learner
    cd /learner
    AGGR="$1"
    shift 1
    LAYER="$1"
    shift 1
    REP="$1"
    shift 1
    MODEL="$1"
    shift 1
    DOMAIN="$1"
    shift 1
    TRAINONLY="$1"

    if [[ $TRAINONLY -eq 1 ]]
    then
        python3 scripts/train_test_multi.py -a "$AGGR" -l "$LAYER" -r "$REP" -m "$MODEL" -d "$DOMAIN" --train-only
    else
        python3 scripts/train_test_multi.py -a "$AGGR" -l "$LAYER" -r "$REP" -m "$MODEL" -d "$DOMAIN"
    fi

